import 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:to_do_list/utils/fonts.dart';import 'package:to_do_list/utils/strings.dart';import 'package:to_do_list/widgets/app_header.dart';import 'package:to_do_list/theme_provider.dart';class SettingPage extends StatefulWidget {  const SettingPage({Key? key}) : super(key: key);  @override  State<SettingPage> createState() => _SettingPageState();}class _SettingPageState extends State<SettingPage> {  late SharedPreferences prefs;  bool isDarkModeActive = false;  @override  Widget build(BuildContext context) {    getSharedPreferences();    final themeProvider = Provider.of<ThemeProvider>(context);    return Scaffold(      body: SafeArea(        child: Column(          crossAxisAlignment: CrossAxisAlignment.center,          children: [            Padding(                padding: const EdgeInsets.only(left: 40, top: 30),                child: Header(                  onCrossPress: pop,                  isCrossVisible: false,                  isTickVisible: false,                )),            const SizedBox(height: 30),            const Center(              child: Text(               setting,                style: TextStyle(                    fontSize: 30,                    fontFamily: comfortaa,                    fontWeight: FontWeight.bold),              ),            ),            const SizedBox(height: 30),            Row(              children: const [                Spacer(),                SizedBox(                  width: 300,                  child: Divider(),                ),                Spacer()              ],            ),            SwitchListTile.adaptive(              value: themeProvider.isDarkMode,              onChanged: (value) {                isDarkModeActive = value;                save();                final provider =                    Provider.of<ThemeProvider>(context, listen: false);                provider.toggleTheme(value);              },              title: const Text(                "Dark Mode",                style: TextStyle(fontSize: 20, fontFamily: comfortaa),              ),              contentPadding: const EdgeInsets.symmetric(horizontal: 20),              activeColor: Colors.white,              activeTrackColor: Colors.black,            ),            const Spacer(),            Text(              'Do It',              style: TextStyle(                  fontSize: 14, color: Theme.of(context).primaryColorLight),            ),            const SizedBox(height: 5),            Text(              'version 1.0.0',              style: TextStyle(                  fontSize: 10, color: Theme.of(context).primaryColorLight),            ),            const SizedBox(              height: 10,            )          ],        ),      ),    );  }  getSharedPreferences() async => prefs = await SharedPreferences.getInstance();  save() async => await prefs.setBool(preferenceKey, isDarkModeActive);  void pop() {    Navigator.pop(context);  }}